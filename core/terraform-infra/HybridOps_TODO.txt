âœ… Refactor compute module to use universal interface with provider-specific submodules (Proxmox, Azure, GCP)
âœ… Add modules for network, VPN (NCC hub/spokes), and Kubernetes
âœ… Create environments for onprem (dev, staging, prod) and cloud (Azure, GCP)
âœ… Add scenarios for failover-tests and migration-tests with isolated state
âœ… Implement backend-configs for dev, staging, prod, and scenario using Terraform Cloud
âœ… Add cloud-showcases folder for standalone AKS and GKE demos
âœ… Integrate Cloud DNS failover policy with public IP health checks
âœ… Build decision-service to select Azure or GCP based on budget and health
âœ… Use Ansible to consume Terraform outputs at runtime via ip_mapper role
âœ… Add README.md files to all folders explaining purpose and usage
âœ… Add root-level README.md in terraform/ folder to describe overall structure
ðŸ”² Populate modules with production-ready Terraform code
ðŸ”² Populate AKS and GKE showcases with autoscaling and GitOps examples
ðŸ”² Add Jenkins or GitHub Actions pipeline to trigger decision-service and Terraform workflows
ðŸ”² Generate architecture diagram for NCC hub, VPN spokes, DNS failover, and decision logic
ðŸ”² Record demo videos for failover, migration, and autoscale scenarios
ðŸ”² Prepare documentation for Global Talent Visa portfolio
