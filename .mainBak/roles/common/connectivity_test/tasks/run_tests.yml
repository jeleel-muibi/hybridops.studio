---
# SPDX-License-Identifier: MIT-0
# Author: Jeleel Muibi (hybridops.studio)
# Created: 2025-09-09 21:39:57 UTC
# Updated: 2025-09-10 â€” Initial implementation of connectivity test executor
#
# Purpose: Controller-side connectivity checks per host (delegated to localhost).

# Preflight
- name: Resolve target host
  ansible.builtin.set_fact:
    __target_host: "{{ ansible_host | default(inventory_hostname) }}"
    __timeout: "{{ connectivity_timeout | default(timeout | default(3)) }}"

- name: Optionally show test target
  ansible.builtin.debug:
    msg: "Testing {{ inventory_hostname }} ({{ __target_host }})"
  when: show_test_targets | default(false)

- name: Skip placeholder/invalid targets
  when: __target_host in ['XX.XX.XX.00', '0.0.0.0', '', None]
  block:
  - ansible.builtin.debug:
      msg: "Skipping {{ inventory_hostname }} (placeholder)"
  - meta: end_host

# Controller facts
- name: Gather controller facts
  setup:
    gather_subset: min
  delegate_to: localhost
  run_once: true

- name: Choose ICMP flag
  set_fact:
    __controller_icmp_flag: "{{ '-n' if hostvars['localhost'].ansible_facts.os_family | lower == 'windows' else '-c' }}"
  delegate_to: localhost
  run_once: true

# Tests
- name: ICMP ping
  ansible.builtin.command: "ping {{ hostvars['localhost'].__controller_icmp_flag | default('-c') }} {{ ping_count }} {{ __target_host }}"
  delegate_to: localhost
  register: ping_result
  ignore_errors: true
  changed_when: false
  when: tests_enabled.icmp | default(true)

- name: Test SSH port
  ansible.builtin.wait_for:
    host: "{{ __target_host }}"
    port: "{{ ports.ssh }}"
    timeout: "{{ __timeout }}"
    state: started
  delegate_to: localhost
  register: ssh_result
  ignore_errors: true
  when:
  - tests_enabled.ssh | default(true)
  - ports.ssh is defined

- name: Test Telnet port
  ansible.builtin.wait_for:
    host: "{{ __target_host }}"
    port: "{{ ports.telnet }}"
    timeout: "{{ __timeout }}"
    state: started
  delegate_to: localhost
  register: telnet_result
  ignore_errors: true
  when:
  - tests_enabled.telnet | default(false)
  - ports.telnet is defined

- name: Test HTTP port
  ansible.builtin.wait_for:
    host: "{{ __target_host }}"
    port: "{{ ports.http }}"
    timeout: "{{ __timeout }}"
    state: started
  delegate_to: localhost
  register: http_result
  ignore_errors: true
  when:
  - tests_enabled.http | default(true)
  - ports.http is defined

- name: Optional HTTP HEAD
  ansible.builtin.uri:
    url: "http://{{ __target_host }}:{{ ports.http }}/"
    method: HEAD
    return_content: false
    validate_certs: false
    status_code: [ 200, 301, 302, 401, 403 ]
    timeout: "{{ __timeout }}"
  delegate_to: localhost
  register: http_head_result
  ignore_errors: true
  when:
  - tests_enabled.http_head | default(false)
  - ports.http is defined

- name: Test HTTPS port
  ansible.builtin.wait_for:
    host: "{{ __target_host }}"
    port: "{{ ports.https }}"
    timeout: "{{ __timeout }}"
    state: started
  delegate_to: localhost
  register: https_result
  ignore_errors: true
  when:
  - tests_enabled.https | default(true)
  - ports.https is defined

- name: Optional HTTPS HEAD
  ansible.builtin.uri:
    url: "https://{{ __target_host }}:{{ ports.https }}/"
    method: HEAD
    return_content: false
    validate_certs: false
    status_code: [ 200, 301, 302, 401, 403 ]
    timeout: "{{ __timeout }}"
  delegate_to: localhost
  register: https_head_result
  ignore_errors: true
  when:
  - tests_enabled.https_head | default(false)
  - ports.https is defined
